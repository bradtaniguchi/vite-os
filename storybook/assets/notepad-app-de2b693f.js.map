{"version":3,"file":"notepad-app-de2b693f.js","sources":["../../node_modules/react-use/esm/useSessionStorage.js","../../src/hooks/use-app-services.ts","../../src/apps/notepad/notepad-app.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { isBrowser } from './misc/util';\nvar useSessionStorage = function (key, initialValue, raw) {\n    if (!isBrowser) {\n        return [initialValue, function () { }];\n    }\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var _a = useState(function () {\n        try {\n            var sessionStorageValue = sessionStorage.getItem(key);\n            if (typeof sessionStorageValue !== 'string') {\n                sessionStorage.setItem(key, raw ? String(initialValue) : JSON.stringify(initialValue));\n                return initialValue;\n            }\n            else {\n                return raw ? sessionStorageValue : JSON.parse(sessionStorageValue || 'null');\n            }\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // sessionStorage can throw. JSON.parse and JSON.stringify\n            // can throw, too.\n            return initialValue;\n        }\n    }), state = _a[0], setState = _a[1];\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n        try {\n            var serializedState = raw ? String(state) : JSON.stringify(state);\n            sessionStorage.setItem(key, serializedState);\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // sessionStorage can throw. Also JSON.stringify can throw.\n        }\n    });\n    return [state, setState];\n};\nexport default useSessionStorage;\n","import { useLocalStorage, useSessionStorage } from \"react-use\";\nimport { App } from \"../types/app\";\nimport { useMemo } from \"react\";\n\n/**\n * Custom hook that provides the app services for the given APP_ID.\n *\n * All apps will have their own set of services pre-built for their configuration\n * at boot time. This hook is used to return those services as-needed.\n *\n * This works with `AppServicesContext`.\n */\nexport function useAppService(appId: App[\"id\"]) {\n  const [localStorageValue, setLocalStorageValue, removeLocalStorageValue] =\n    useLocalStorage(`app:${appId}`, {}, { raw: true });\n\n  const localStorageService = useMemo(\n    () => ({\n      // alias to make simpler\n      value: localStorageValue,\n      set: setLocalStorageValue,\n      remove: removeLocalStorageValue,\n    }),\n    [localStorageValue, setLocalStorageValue, removeLocalStorageValue]\n  );\n\n  const [sessionStorageValue, setSessionStorageValue] = useSessionStorage(\n    `app:${appId}`,\n    {}\n  );\n\n  const sessionStorageService = useMemo(\n    () => ({\n      // alias to make simpler\n      value: sessionStorageValue,\n      set: setSessionStorageValue,\n    }),\n    [sessionStorageValue, setSessionStorageValue]\n  );\n\n  // TODO: add other services\n  // - notification-\"bus\" - displays desktop notifications\n  // - background/daemon - runs things in the background? Complex feature!\n  // - \"app-tray\" settings - handles things in the \"app-bar\"???\n\n  return { localStorageService, sessionStorageService };\n}\n","import { SyntheticEvent, useCallback } from \"react\";\nimport { useAppService } from \"../../hooks/use-app-services\";\nimport { NOTEPAD_APP_DEF } from \"./notepad-app-def\";\n\nexport function NotepadApp() {\n  const { localStorageService } = useAppService(NOTEPAD_APP_DEF.id);\n\n  // prevent complex objects from being used\n  const value =\n    typeof localStorage.value === \"object\" ? \"\" : localStorage.value;\n\n  const handleOnChange = useCallback(\n    (e: SyntheticEvent) => {\n      const target = e.target as HTMLDivElement;\n      // TODO: do checks against previous\n      console.log(target);\n      localStorageService.set(target.innerText);\n    },\n    [localStorageService]\n  );\n\n  return (\n    <div>\n      {/* TODO: create core-app for menu components? */}\n      <h1>Notepad app</h1>\n      {/* TODO: add styling/formatting */}\n      {/* TODO: prevent from saving incorrect */}\n      <div contentEditable={true} onBlur={handleOnChange}>\n        <>{value}</>\n      </div>\n    </div>\n  );\n}\n"],"names":["useSessionStorage","key","initialValue","raw","isBrowser","_a","useState","sessionStorageValue","state","setState","useEffect","serializedState","useSessionStorage$1","useAppService","appId","localStorageValue","setLocalStorageValue","removeLocalStorageValue","useLocalStorage","localStorageService","useMemo","setSessionStorageValue","sessionStorageService","NotepadApp","NOTEPAD_APP_DEF","value","handleOnChange","useCallback","e","target","jsx","Fragment"],"mappings":"2TAEA,IAAIA,EAAoB,SAAUC,EAAKC,EAAcC,EAAK,CACtD,GAAI,CAACC,EACD,MAAO,CAACF,EAAc,UAAY,CAAA,CAAG,EAGzC,IAAIG,EAAKC,EAAAA,SAAS,UAAY,CAC1B,GAAI,CACA,IAAIC,EAAsB,eAAe,QAAQN,CAAG,EACpD,OAAI,OAAOM,GAAwB,UAC/B,eAAe,QAAQN,EAAKE,EAAM,OAAOD,CAAY,EAAI,KAAK,UAAUA,CAAY,CAAC,EAC9EA,GAGAC,EAAMI,EAAsB,KAAK,MAAMA,GAAuB,MAAM,CAElF,MACU,CAIP,OAAOL,CACV,CACT,CAAK,EAAGM,EAAQH,EAAG,CAAC,EAAGI,EAAWJ,EAAG,CAAC,EAElCK,OAAAA,EAAAA,UAAU,UAAY,CAClB,GAAI,CACA,IAAIC,EAAkBR,EAAM,OAAOK,CAAK,EAAI,KAAK,UAAUA,CAAK,EAChE,eAAe,QAAQP,EAAKU,CAAe,CAC9C,MACU,CAGV,CACT,CAAK,EACM,CAACH,EAAOC,CAAQ,CAC3B,EACA,MAAAG,EAAeZ,EC1BR,SAASa,EAAcC,EAAkB,CAC9C,KAAM,CAACC,EAAmBC,EAAsBC,CAAuB,EACrEC,EAAgB,OAAOJ,CAAK,GAAI,CAAC,EAAG,CAAE,IAAK,EAAM,CAAA,EAE7CK,EAAsBC,EAAA,QAC1B,KAAO,CAEL,MAAOL,EACP,IAAKC,EACL,OAAQC,CAAA,GAEV,CAACF,EAAmBC,EAAsBC,CAAuB,CAAA,EAG7D,CAACV,EAAqBc,CAAsB,EAAIrB,EACpD,OAAOc,CAAK,GACZ,CAAC,CAAA,EAGGQ,EAAwBF,EAAA,QAC5B,KAAO,CAEL,MAAOb,EACP,IAAKc,CAAA,GAEP,CAACd,EAAqBc,CAAsB,CAAA,EAQvC,MAAA,CAAE,oBAAAF,EAAqB,sBAAAG,EAChC,CC1CO,SAASC,GAAa,CAC3B,KAAM,CAAE,oBAAAJ,CAAwB,EAAAN,EAAcW,EAAgB,EAAE,EAG1DC,EACJ,OAAO,aAAa,OAAU,SAAW,GAAK,aAAa,MAEvDC,EAAiBC,EAAA,YACpBC,GAAsB,CACrB,MAAMC,EAASD,EAAE,OAEjB,QAAQ,IAAIC,CAAM,EACEV,EAAA,IAAIU,EAAO,SAAS,CAC1C,EACA,CAACV,CAAmB,CAAA,EAGtB,cACG,MAEC,CAAA,SAAA,CAAAW,EAAAA,IAAC,MAAG,SAAW,aAAA,CAAA,EAGfA,EAAAA,IAAC,OAAI,gBAAiB,GAAM,OAAQJ,EAClC,SAAAI,EAAAA,IAAAC,EAAAA,SAAA,CAAG,WAAM,CACX,CAAA,CACF,CAAA,CAAA,CAEJ","x_google_ignoreList":[0]}