{"version":3,"file":"useLocalStorage-879e8fde.js","sources":["../../node_modules/react-use/esm/misc/util.js","../../node_modules/react-use/esm/useLocalStorage.js"],"sourcesContent":["export var noop = function () { };\nexport function on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexport function off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexport var isBrowser = typeof window !== 'undefined';\nexport var isNavigator = typeof navigator !== 'undefined';\n","import { useCallback, useState, useRef, useLayoutEffect } from 'react';\nimport { isBrowser, noop } from './misc/util';\nvar useLocalStorage = function (key, initialValue, options) {\n    if (!isBrowser) {\n        return [initialValue, noop, noop];\n    }\n    if (!key) {\n        throw new Error('useLocalStorage key may not be falsy');\n    }\n    var deserializer = options\n        ? options.raw\n            ? function (value) { return value; }\n            : options.deserializer\n        : JSON.parse;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var initializer = useRef(function (key) {\n        try {\n            var serializer = options ? (options.raw ? String : options.serializer) : JSON.stringify;\n            var localStorageValue = localStorage.getItem(key);\n            if (localStorageValue !== null) {\n                return deserializer(localStorageValue);\n            }\n            else {\n                initialValue && localStorage.setItem(key, serializer(initialValue));\n                return initialValue;\n            }\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. JSON.parse and JSON.stringify\n            // can throw, too.\n            return initialValue;\n        }\n    });\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var _a = useState(function () { return initializer.current(key); }), state = _a[0], setState = _a[1];\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(function () { return setState(initializer.current(key)); }, [key]);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var set = useCallback(function (valOrFunc) {\n        try {\n            var newState = typeof valOrFunc === 'function' ? valOrFunc(state) : valOrFunc;\n            if (typeof newState === 'undefined')\n                return;\n            var value = void 0;\n            if (options)\n                if (options.raw)\n                    if (typeof newState === 'string')\n                        value = newState;\n                    else\n                        value = JSON.stringify(newState);\n                else if (options.serializer)\n                    value = options.serializer(newState);\n                else\n                    value = JSON.stringify(newState);\n            else\n                value = JSON.stringify(newState);\n            localStorage.setItem(key, value);\n            setState(deserializer(value));\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. Also JSON.stringify can throw.\n        }\n    }, [key, setState]);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var remove = useCallback(function () {\n        try {\n            localStorage.removeItem(key);\n            setState(undefined);\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw.\n        }\n    }, [key, setState]);\n    return [state, set, remove];\n};\nexport default useLocalStorage;\n"],"names":["noop","isBrowser","useLocalStorage","key","initialValue","options","deserializer","value","initializer","useRef","serializer","localStorageValue","_a","useState","state","setState","useLayoutEffect","set","useCallback","valOrFunc","newState","remove","useLocalStorage$1"],"mappings":"wCAAO,IAAIA,EAAO,UAAY,CAAA,EAmBnBC,EAAY,OAAO,OAAW,ICjBrCC,EAAkB,SAAUC,EAAKC,EAAcC,EAAS,CACxD,GAAI,CAACJ,EACD,MAAO,CAACG,EAAcJ,EAAMA,CAAI,EAEpC,GAAI,CAACG,EACD,MAAM,IAAI,MAAM,sCAAsC,EAE1D,IAAIG,EAAeD,EACbA,EAAQ,IACJ,SAAUE,EAAO,CAAE,OAAOA,CAAQ,EAClCF,EAAQ,aACZ,KAAK,MAEPG,EAAcC,SAAO,SAAUN,EAAK,CACpC,GAAI,CACA,IAAIO,EAAaL,EAAWA,EAAQ,IAAM,OAASA,EAAQ,WAAc,KAAK,UAC1EM,EAAoB,aAAa,QAAQR,CAAG,EAChD,OAAIQ,IAAsB,KACfL,EAAaK,CAAiB,GAGrCP,GAAgB,aAAa,QAAQD,EAAKO,EAAWN,CAAY,CAAC,EAC3DA,EAEd,MACU,CAIP,OAAOA,CACV,CACT,CAAK,EAEGQ,EAAKC,EAAAA,SAAS,UAAY,CAAE,OAAOL,EAAY,QAAQL,CAAG,CAAI,CAAA,EAAGW,EAAQF,EAAG,CAAC,EAAGG,EAAWH,EAAG,CAAC,EAEnGI,EAAAA,gBAAgB,UAAY,CAAE,OAAOD,EAASP,EAAY,QAAQL,CAAG,CAAC,CAAE,EAAI,CAACA,CAAG,CAAC,EAEjF,IAAIc,EAAMC,cAAY,SAAUC,EAAW,CACvC,GAAI,CACA,IAAIC,EAAW,OAAOD,GAAc,WAAaA,EAAUL,CAAK,EAAIK,EACpE,GAAI,OAAOC,EAAa,IACpB,OACJ,IAAIb,EAAQ,OACRF,EACIA,EAAQ,IACJ,OAAOe,GAAa,SACpBb,EAAQa,EAERb,EAAQ,KAAK,UAAUa,CAAQ,EAC9Bf,EAAQ,WACbE,EAAQF,EAAQ,WAAWe,CAAQ,EAEnCb,EAAQ,KAAK,UAAUa,CAAQ,EAEnCb,EAAQ,KAAK,UAAUa,CAAQ,EACnC,aAAa,QAAQjB,EAAKI,CAAK,EAC/BQ,EAAST,EAAaC,CAAK,CAAC,CAC/B,MACU,CAGV,CACT,EAAO,CAACJ,EAAKY,CAAQ,CAAC,EAEdM,EAASH,EAAAA,YAAY,UAAY,CACjC,GAAI,CACA,aAAa,WAAWf,CAAG,EAC3BY,EAAS,MAAS,CACrB,MACU,CAGV,CACT,EAAO,CAACZ,EAAKY,CAAQ,CAAC,EAClB,MAAO,CAACD,EAAOG,EAAKI,CAAM,CAC9B,EACA,MAAAC,EAAepB","x_google_ignoreList":[0,1]}