{"version":3,"file":"AppListItem-1c9ea46b.js","sources":["../../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../../src/core/app-list/AppListItem.tsx"],"sourcesContent":["import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { Card } from \"flowbite-react\";\nimport { App } from \"../../types/app\";\nimport { MouseEvent, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\n\n/**\n * Component shown on the AppList. Each individual app is a card\n * shown within the list.\n */\nexport function AppListItem(props: { app: App; onClick: (id: App) => void }) {\n  const { app, onClick } = props;\n\n  const { icon, name } = app;\n\n  const handleOnClick = useCallback(\n    async (event: MouseEvent<HTMLElement>) => {\n      event.stopPropagation();\n\n      onClick(app);\n    },\n    [onClick, app]\n  );\n\n  return (\n    <motion.div whileHover={{ scale: 1.2 }} whileTap={{ scale: 1.1 }}>\n      <Card className=\"h-full cursor-pointer\" onClick={handleOnClick}>\n        <div className=\"flex flex-col items-center justify-center h-full\">\n          <div className=\"text-4xl\">{icon}</div>\n          <div>{name}</div>\n        </div>\n      </Card>\n    </motion.div>\n  );\n}\n"],"names":["preloadedFeatures","animations","gestureAnimations","drag","layout","motion","createMotionProxy","Component","config","createDomMotionConfig","createDomVisualElement","AppListItem","props","app","onClick","icon","name","handleOnClick","useCallback","event","jsx","Card","jsxs"],"mappings":"+KASA,MAAMA,EAAoB,CACtB,GAAGC,EACH,GAAGC,EACH,GAAGC,EACH,GAAGC,CACP,EAOMC,EAAuBC,EAAkB,CAACC,EAAWC,IAAWC,EAAsBF,EAAWC,EAAQR,EAAmBU,CAAsB,CAAC,ECZlJ,SAAAC,EAAAC,EAAA,CACL,KAAA,CAAA,IAAAC,EAAA,QAAAC,CAAA,EAAAF,EAEA,CAAA,KAAAG,EAAA,KAAAC,CAAA,EAAAH,EAEAI,EAAAC,EAAA,YAAsB,MAAAC,GAAA,CAElBA,EAAA,gBAAA,EAEAL,EAAAD,CAAA,CAAW,EACb,CAAAC,EAAAD,CAAA,CACa,EAGf,OAAAO,MAAAf,EAAA,IAAA,CAAA,WAAA,CAAA,MAAA,GAAA,EAAA,SAAA,CAAA,MAAA,GAAA,EAAA,SAAAe,EAAA,IAAAC,EAAA,CAAA,UAAA,wBAAA,QAAAJ,EAAA,SAAAK,EAAAA,KAAA,MAAA,CAAA,UAAA,mDAAA,SAAA,CAIQF,EAAA,IAAA,MAAA,CAAA,UAAA,WAAA,SAAAL,EAAA,EAAgCK,EAAAA,IAAA,MAAA,CAAA,SAAAJ,CAAA,CAAA,CACrB,EAAA,CAAA,CAAA,CAAA,CAAA,CAKrB;","x_google_ignoreList":[0]}